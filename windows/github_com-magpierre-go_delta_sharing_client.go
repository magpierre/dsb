// Copyright 2025 Magnus Pierre
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by 'yaegi extract github.com/magpierre/go_delta_sharing_client'. DO NOT EDIT.

package windows

import (
	"reflect"

	delta_sharing "github.com/magpierre/go_delta_sharing_client"
)

// DeltaSharingSymbols contains the symbols for the delta_sharing package
var DeltaSharingSymbols = map[string]map[string]reflect.Value{}

func init() {
	DeltaSharingSymbols["github.com/magpierre/go_delta_sharing_client/delta_sharing"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"LoadArrowTable":                reflect.ValueOf(delta_sharing.LoadArrowTable),
		"LoadAsArrowTable":              reflect.ValueOf(delta_sharing.LoadAsArrowTable),
		"NewSharingClient":              reflect.ValueOf(delta_sharing.NewSharingClient),
		"NewSharingClientFromString":    reflect.ValueOf(delta_sharing.NewSharingClientFromString),
		"NewSharingClientV2":            reflect.ValueOf(delta_sharing.NewSharingClientV2),
		"NewSharingClientV2FromString":  reflect.ValueOf(delta_sharing.NewSharingClientV2FromString),

		// type definitions
		"CDFFile":         reflect.ValueOf((*delta_sharing.CDFFile)(nil)),
		"CdfOptions":      reflect.ValueOf((*delta_sharing.CdfOptions)(nil)),
		"DSErr":           reflect.ValueOf((*delta_sharing.DSErr)(nil)),
		"DataChangeFile":  reflect.ValueOf((*delta_sharing.DataChangeFile)(nil)),
		"File":            reflect.ValueOf((*delta_sharing.File)(nil)),
		"RemoveFile":      reflect.ValueOf((*delta_sharing.RemoveFile)(nil)),
		"SharingClient":   reflect.ValueOf((*delta_sharing.SharingClient)(nil)),
		"SharingClientV2": reflect.ValueOf((*delta_sharing.SharingClientV2)(nil)),
		"Table":           reflect.ValueOf((*delta_sharing.Table)(nil)),
	}
}
